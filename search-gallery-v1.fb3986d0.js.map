{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,aCAAC,EAAAD,EAAA,S,sDAGOE,ECHJ,W,sBDGUC,I,aAKTC,KAAKC,YAAc,GACnBD,KAAKE,KAAO,C,iBAGdC,IAAA,c,MAAA,WACE,IAAMC,EAAe,IAAIC,gBAAgB,CACvCF,IAAKJ,EAAUO,QACfC,EAAGP,KAAKC,YACRO,WAAY,QACZC,YAAa,aACbC,YAAY,EACZC,SAAU,GACVT,KAAMF,KAAKE,OAGPU,EAAY,GAAyBC,OAAtBd,EAAUe,SAAS,KAAgBD,OAAbT,GAE3C,MAAgC,KAA5BJ,KAAKC,YAAYc,QACnBpB,EAAAqB,OAAOC,QAAQ,oCACRC,QAAQC,OAAO,mBAGjBC,EAAAC,QACJC,IAAIV,EAAW,CACdW,eAAgB,SAAAC,G,OAAoB,KAAVA,C,IAE3BC,OAAM,SAAAC,G,OAAKC,QAAQC,IAAIF,E,OAI2BvB,IAAvD,gB,MAAA,WACEH,KAAKE,MAAQ,C,IAIfC,IAAA,Y,MAAA,WACEH,KAAKE,KAAO,C,IAGVC,IAAA,Q,IAAJ,WACE,OAAOH,KAAKC,W,MAGd,SAAU4B,GACR7B,KAAK8B,MAAQD,C,OCpDd,GDIDE,EAAAC,EAAA,CADWlC,EACJ,UAAU,sCACjBiC,EAAAC,EAAA,CAFWlC,EAEJ,WAAW,4B,iBDMdmC,EAAO,CACXC,WAAYC,SAASC,cAAc,gBAInCC,YAAaF,SAASC,cAAc,eAGhCE,EAAe,IAAIP,EAAAQ,GAAJ,CAAmB,aAAc,CACpDC,aAAc,MACdC,aAAc,IACdC,YAAY,IAGRC,EAAe,IAAI7C,EAiDzB,SAAS8C,IACPD,EACGE,cACAC,MAAK,SAAAC,G,IAAGC,EAAID,EAAJC,KACPL,EAAaM,gBACbtB,QAAQC,IACN,iBACEf,OADe8B,EAAazC,KAAO,EAAE,iBAEtCW,OADC8B,EAAazC,QAIjB,EAAAgD,EAAAC,gBAAeH,EAAKI,OAEpB,EAAAF,EAAAG,uBAAsBL,EAAKM,YAE3B,EAAAJ,EAAAK,oBAEAjB,EAAakB,S,IAEd/B,OAAM,SAAAgC,G,OAAS9B,QAAQC,IAAI6B,E,IAlEhCxB,EAAKI,YAAYqB,MAAMC,QAAU,OACjC1B,EAAKC,WAAW0B,iBAAiB,UAEjC,SAA4BlC,GAC1BA,EAAEmC,iBAGF5B,EAAKI,YAAYqB,MAAMC,QAAU,OAEjChB,EAAa1C,YAAcyB,EAAEoC,cAAcC,SAAS9D,YAAY+D,MAChErB,EAAasB,YAEbtB,EACGE,cACAC,MAAK,SAAAC,G,IAAGC,EAAID,EAAJC,KACY,IAAfA,EAAKkB,OAOTvE,EAAAqB,OAAOmD,QAAQ,oBAAmCtD,OAAfmC,EAAKM,UAAU,aAElDX,EAAaM,gBAEbtB,QAAQC,IACN,gCAEkCf,OADhC8B,EAAa1C,YACd,mCACCY,OADgCmC,EAAKkB,MAAM,oBAE7BrD,OADd8B,EAAazC,KAAO,EACrB,iBAAiCW,OAAlB8B,EAAazC,QAG/B,EAAAgD,EAAAkB,oBACA,EAAAlB,EAAAC,gBAAeH,EAAKI,MAEpBd,EAAakB,UAEbvB,EAAKI,YAAYqB,MAAMC,QAAU,QACjC1B,EAAKI,YAAYuB,iBAAiB,QAAShB,IAE3C,EAAAM,EAAAG,uBAAsBL,EAAKM,YA1BzB3D,EAAAqB,OAAOqD,QACL,2E,IA2BL5C,OAAM,SAAAgC,G,OAAS9B,QAAQC,IAAI6B,E","sources":["src/js/search-gallery-v1.js","src/js/search-api-v1.js","<<jsx-config-pragma.js>>"],"sourcesContent":["import { Notify } from 'notiflix';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport { SearchAPI } from './search-api-v1';\nimport {\n  showImgGallery,\n  clearImgGallery,\n  checkElementsQuantity,\n  adjustPageScroll,\n} from './ui-gallery';\n\nconst refs = {\n  searchForm: document.querySelector('#search-form'),\n  //   searchInput: document.querySelector('[name=\"searchQuery\"]'),\n  //   submitBtn: document.querySelector('button[type=\"submit\"]'),\n  //   gallery: document.querySelector('.gallery'),\n  loadMoreBtn: document.querySelector('.load-more'),\n};\n\nconst galleryModal = new SimpleLightbox('.gallery a', {\n  captionsData: 'alt',\n  captionDelay: 250,\n  scrollZoom: false,\n});\n\nconst newSearchAPI = new SearchAPI();\n\nrefs.loadMoreBtn.style.display = 'none';\nrefs.searchForm.addEventListener('submit', onSearchFormSubmit);\n\nfunction onSearchFormSubmit(e) {\n  e.preventDefault();\n\n  // ТЗ: \"При повторному сабміті форми кнопка спочатку ховається, а після запиту знову відображається.\"\n  refs.loadMoreBtn.style.display = 'none';\n\n  newSearchAPI.searchQuery = e.currentTarget.elements.searchQuery.value;\n  newSearchAPI.resetPage();\n\n  newSearchAPI\n    .fetchImages()\n    .then(({ data }) => {\n      if (data.total === 0) {\n        Notify.failure(\n          'Sorry, there are no images matching your search query. Please try again.'\n        );\n        return;\n      }\n\n      Notify.success(`Hooray! We found ${data.totalHits} images.`);\n\n      newSearchAPI.incrementPage();\n\n      console.log(\n        `NEW SEARCH...\\nSearch query: ${\n          newSearchAPI.searchQuery\n        }\\nQuantity of found elements:  ${data.total}\\nCurrent page: ${\n          newSearchAPI.page - 1\n        }\\nNext page: ${newSearchAPI.page}`\n      );\n\n      clearImgGallery();\n      showImgGallery(data.hits);\n\n      galleryModal.refresh();\n\n      refs.loadMoreBtn.style.display = 'block';\n      refs.loadMoreBtn.addEventListener('click', onLoadMore);\n\n      checkElementsQuantity(data.totalHits);\n    })\n    .catch(error => console.log(error));\n}\n\nfunction onLoadMore() {\n  newSearchAPI\n    .fetchImages()\n    .then(({ data }) => {\n      newSearchAPI.incrementPage();\n      console.log(\n        `Current page: ${newSearchAPI.page - 1}\\nNext page: ${\n          newSearchAPI.page\n        }`\n      );\n\n      showImgGallery(data.hits);\n\n      checkElementsQuantity(data.totalHits);\n\n      adjustPageScroll();\n\n      galleryModal.refresh();\n    })\n    .catch(error => console.log(error));\n}\n","import { Notify } from 'notiflix';\nimport axios from 'axios';\n\nexport class SearchAPI {\n  static API_KEY = '34194701-2813288863e2fdf221136bb42';\n  static BASE_URL = 'https://pixabay.com/api/';\n\n  constructor() {\n    this.searchQuery = '';\n    this.page = 1;\n  }\n\n  fetchImages() {\n    const searchParams = new URLSearchParams({\n      key: SearchAPI.API_KEY,\n      q: this.searchQuery,\n      image_type: 'photo',\n      orientation: 'horizontal',\n      safesearch: true,\n      per_page: 40,\n      page: this.page,\n    });\n\n    const searchURL = `${SearchAPI.BASE_URL}?${searchParams}`;\n\n    if (this.searchQuery.trim() === '') {\n      Notify.warning('Please, enter your search query!');\n      return Promise.reject('Invalid query!');\n    }\n\n    return axios\n      .get(searchURL, {\n        validateStatus: status => status != 404,\n      })\n      .catch(e => console.log(e));\n  }\n\n  // Збільшуємо значення сторінки для наступного пошукового запиту:\n  incrementPage() {\n    this.page += 1;\n  }\n\n  // Скидуємо значення сторінки до дефолтного при кожному новому сабміті пошукової форми:\n  resetPage() {\n    this.page = 1;\n  }\n\n  get query() {\n    return this.searchQuery;\n  }\n\n  set query(newQuery) {\n    this.query = newQuery;\n  }\n}\n",null],"names":["$6JpON","parcelRequire","$8MBJY","$8dd04add7422cf78$export$6d4af6dcbab2e7c5","SearchAPI","this","searchQuery","page","key","searchParams","URLSearchParams","API_KEY","q","image_type","orientation","safesearch","per_page","searchURL","concat","BASE_URL","trim","Notify","warning","Promise","reject","$dIxxU","default","get","validateStatus","status","catch","e","console","log","newQuery","query","$parcel$interopDefault","$hKHmD","$8bac9751f9ff261f$var$refs","searchForm","document","querySelector","loadMoreBtn","$8bac9751f9ff261f$var$galleryModal","$5IjG7","captionsData","captionDelay","scrollZoom","$8bac9751f9ff261f$var$newSearchAPI","$8bac9751f9ff261f$var$onLoadMore","fetchImages","then","param","data","incrementPage","$732lr","showImgGallery","hits","checkElementsQuantity","totalHits","adjustPageScroll","refresh","error","style","display","addEventListener","preventDefault","currentTarget","elements","value","resetPage","total","success","clearImgGallery","failure"],"version":3,"file":"search-gallery-v1.fb3986d0.js.map"}